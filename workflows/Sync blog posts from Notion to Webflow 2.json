{
  "active": false,
  "connections": {
    "Get simple page data": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get all page data": {
      "main": [
        [
          {
            "node": "Take cover url",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Take cover url": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Final Notion post data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get blocks1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data transporter1": {
      "main": [
        [
          {
            "node": "For each blog post1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get all blog posts1": {
      "main": [
        [
          {
            "node": "Is sync checked?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is sync checked?1": {
      "main": [
        [
          {
            "node": "Slug uniqueness checker and differentiator1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "For each blog post1": {
      "main": [
        [
          {
            "node": "Success message1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get simple page data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get all page data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create post1": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update slug on posts1": {
      "main": [
        [
          {
            "node": "Data transporter1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Slug uniqueness checker and differentiator1": {
      "main": [
        [
          {
            "node": "For each blog post1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Add slug to posts1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compare by slug1": {
      "main": [
        [
          {
            "node": "Create post1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ],
        [],
        [
          {
            "node": "Add Webflow item id to Notion data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add slug to posts1": {
      "main": [
        [
          {
            "node": "Data transporter1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get all collection posts1": {
      "main": [
        [
          {
            "node": "Compare by slug1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Data transporter, Notion posts to sync1": {
      "main": [
        [
          {
            "node": "Compare by slug1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Craft the rich text element1": {
      "main": [
        [
          {
            "node": "Final Notion post data",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Turn blocks into HTML1": {
      "main": [
        [
          {
            "node": "Craft the rich text element1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get blocks1": {
      "main": [
        [
          {
            "node": "Turn blocks into HTML1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update in \"Blog Posts\"": {
      "main": [
        [
          {
            "node": "Update slug on posts1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add Webflow item id to Notion data": {
      "main": [
        [
          {
            "node": "Update in \"Blog Posts\"",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Final Notion post data": {
      "main": [
        [
          {
            "node": "Data transporter, Notion posts to sync1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get all collection posts1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get all blog posts1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-08-09T08:34:05.230Z",
  "id": "bHxfuVzTdgwp5nsF",
  "meta": null,
  "name": "Sync blog posts from Notion to Webflow 2",
  "nodes": [
    {
      "parameters": {
        "content": "## Workflow installation\n* Add a \"slug\" text property to each blog post (this parameter will be synced with Webflow and will be used to determine if a post is new or already present in your Webflow collection)\n* Add a \"Sync to Webflow?\" checkbox to each blog post\n* Connect your accounts and run a test to fill Webflow nodes with the right fields\n\n[![image.png](https://i.postimg.cc/xCymVp7w/image.png)](https://postimg.cc/BLbbxpJp)",
        "height": 495.4835100729081,
        "width": 830.4857444594224
      },
      "id": "29f523a4-18e9-4baa-9767-a9af07489757",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        460,
        460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "get",
        "pageId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $json.id }}"
        }
      },
      "id": "54244b52-d494-4a39-a9be-100f5ce06445",
      "name": "Get simple page data",
      "type": "n8n-nodes-base.notion",
      "position": [
        1908.3572519550153,
        1440
      ],
      "executeOnce": true,
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "get",
        "pageId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $json.id }}"
        },
        "simple": false
      },
      "id": "0e58d921-a3dc-416a-89b1-19695182fe35",
      "name": "Get all page data",
      "type": "n8n-nodes-base.notion",
      "position": [
        1868.3572519550153,
        1760
      ],
      "executeOnce": true,
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7f9960fb-9898-4d1a-b4d9-29c95fb7c144",
              "name": "cover_url",
              "type": "string",
              "value": "={{ $json.cover.external.url }}"
            }
          ]
        },
        "options": {}
      },
      "id": "d5a031fb-0e87-4d52-b9a3-225e335e27eb",
      "name": "Take cover url",
      "type": "n8n-nodes-base.set",
      "position": [
        2088.3572519550153,
        1760
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "6ba0bc78-477f-4527-a08d-4e68f0fd5278",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "position": [
        2308.3572519550153,
        1560
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {},
      "id": "757066fe-0718-4b19-9bd4-381ae77cc35b",
      "name": "Data transporter1",
      "type": "n8n-nodes-base.noOp",
      "position": [
        5208.357251955015,
        1820
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "mode": "list",
          "value": "4587b66c-d670-45b5-93f0-69ba1b0f3924",
          "cachedResultUrl": "https://www.notion.so/4587b66cd67045b593f069ba1b0f3924",
          "cachedResultName": "My blog"
        },
        "returnAll": true,
        "options": {}
      },
      "id": "a43ee302-1ea9-443c-92c2-c14a74898286",
      "name": "Get all blog posts1",
      "type": "n8n-nodes-base.notion",
      "position": [
        768.3572519550153,
        1560
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "461a5a59-f894-4dda-9233-175a1e228d23",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              },
              "leftValue": "={{ $json.property_sync_to_webflow }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "ad97cf26-bc48-4a08-be2a-17b44c2db5f8",
      "name": "Is sync checked?1",
      "type": "n8n-nodes-base.filter",
      "position": [
        1048.3572519550153,
        1560
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "6dd81aeb-3f77-4386-adc5-6e42257e83cf",
      "name": "For each blog post1",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        1628.3572519550153,
        1560
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "content": "### ⚙️ Turn blocks into rich text\nThis is where the magic happens — Notion blocks are mapped and turned into their respective html version. Works with all the major rich text elements: headings 1, headings 2, headings 3, normal, bold and italic text, quotes, bulleted lists, numbered lists and images with captions.",
        "height": 287.94399632670337,
        "width": 777.880012347261
      },
      "id": "d2b94194-00a1-4458-81e5-8b33c2f49da9",
      "name": "Sticky Note17",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2528.3572519550153,
        1640
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### ✅ Create a new post or update an existing one?\nThis node compares (by slug) your Notion post with all your Webflow posts and chooses whether to create a new one (in \"A only\" branch) or update an existing one (in \"different\" branch).",
        "height": 394.8629861599825,
        "width": 218.00983675699544
      },
      "id": "ede57d30-2fe0-4023-8f36-1cd0f51b6f72",
      "name": "Sticky Note18",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3968.3572519550153,
        1340
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "create",
        "siteId": "65a40576635069142ed11d7c",
        "collectionId": "65a40577635069142ed11dd8",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "name",
              "fieldValue": "={{ $json[\"name\"] }}"
            },
            {
              "fieldId": "slug",
              "fieldValue": "={{ $json.property_slug }}"
            },
            {
              "fieldId": "blog-post-richt-text",
              "fieldValue": "={{ $json.newRichText }}"
            },
            {
              "fieldId": "_archived",
              "fieldValue": "false"
            },
            {
              "fieldId": "_draft",
              "fieldValue": "true"
            },
            {
              "fieldId": "blog-post-featured-image-photo",
              "fieldValue": "={{ $json.cover_url }}"
            },
            {
              "fieldId": "blog-post-thumbnail-image-photo",
              "fieldValue": "={{ $json.cover_url }}"
            }
          ]
        }
      },
      "id": "72143173-1a0a-4610-89ed-7b7a448d646e",
      "name": "Create post1",
      "type": "n8n-nodes-base.webflow",
      "position": [
        4388.357251955015,
        1380
      ],
      "retryOnFail": true,
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### 🎉 Success\nSend a success message where you want.\n\nYou can remove this node.\n\nNote: If you're on it, you may need to refresh the Webflow page.",
        "height": 389.3234455133497,
        "width": 233.87813121439967
      },
      "id": "cb8fd136-fc2b-4492-83c7-cf50da90bbdf",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1848.3572519550153,
        880
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "update",
        "pageId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $('Compare by slug1').item.json.different.id.inputA }}"
        },
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "slug|rich_text",
              "textContent": "={{ $json.slug }}"
            }
          ]
        },
        "options": {}
      },
      "id": "aa8b7a86-e2a9-4f81-b645-9d8a60ebccea",
      "name": "Update slug on posts1",
      "type": "n8n-nodes-base.notion",
      "position": [
        4908.357251955015,
        1680
      ],
      "retryOnFail": true,
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "jsCode": "const data = $input.all().map(item => item.json)\nconst slugCount = {};\n\nreturn data.map(item => {\n  let slug = item.property_slug;\n  \n  if (slugCount[slug]) {\n    slugCount[slug] += 1;\n    slug = `${slug}-${slugCount[slug]}`;\n  } else {\n    slugCount[slug] = 1;\n  }\n  \n  item.property_slug = slug;\n  return item;\n});"
      },
      "id": "fcc89ada-2ce7-4edf-b3db-df7d77464b51",
      "name": "Slug uniqueness checker and differentiator1",
      "type": "n8n-nodes-base.code",
      "position": [
        1320,
        1560
      ],
      "notesInFlow": true,
      "typeVersion": 2,
      "notes": "Add a number to the slug if it's not unique"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "mode": "list",
          "value": "C07719A0GF5",
          "cachedResultName": "general"
        },
        "text": "=[Notion to Webflow] — \"{{ $json.name }}\" successfully synced 🎉",
        "otherOptions": {}
      },
      "id": "5edad3c7-3ef3-4dd3-b264-1a33eb9146b9",
      "name": "Success message1",
      "type": "n8n-nodes-base.slack",
      "position": [
        1908.3572519550153,
        1095
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "39a9b5be-d787-4a79-927e-7e9c355bb6f1",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "position": [
        4648.357251955015,
        1460
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "mergeByFields": {
          "values": [
            {
              "field1": "property_slug",
              "field2": "slug"
            }
          ]
        },
        "options": {}
      },
      "id": "997f406b-3606-4ed7-8dc1-965cf5efca95",
      "name": "Compare by slug1",
      "type": "n8n-nodes-base.compareDatasets",
      "position": [
        4028.3572519550153,
        1560
      ],
      "typeVersion": 2.3
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "update",
        "pageId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $json.id }}"
        },
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "slug|rich_text",
              "textContent": "={{ $json.slug }}"
            }
          ]
        },
        "options": {}
      },
      "id": "00baa1e4-69c9-441c-8533-127e7201d865",
      "name": "Add slug to posts1",
      "type": "n8n-nodes-base.notion",
      "position": [
        4888.357251955015,
        1460
      ],
      "retryOnFail": true,
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "getAll",
        "siteId": "65a40576635069142ed11d7c",
        "collectionId": "65a40577635069142ed11dd8",
        "returnAll": true
      },
      "id": "ac98d5fd-d935-4d7a-ab0e-39a4fb78bb8a",
      "name": "Get all collection posts1",
      "type": "n8n-nodes-base.webflow",
      "position": [
        3708.3572519550153,
        1700
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "ba5e128a-f308-45f0-ad0c-45841e60a38d",
      "name": "Data transporter, Notion posts to sync1",
      "type": "n8n-nodes-base.noOp",
      "position": [
        3708.3572519550153,
        1400
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "const blocks = $input.all().map(item => item.json);\n\nlet newRichText = '';\nlet bulletedListItems = [];\nlet numberedListItems = [];\n\nblocks.forEach(block => {\n  if (block.type === 'bulleted_list_item') {\n    bulletedListItems.push(block.html);\n  } else if (block.type === 'numbered_list_item') {\n    numberedListItems.push(block.html);\n  } else {\n    if (bulletedListItems.length > 0) {\n      newRichText += `<ul>${bulletedListItems.join('')}</ul>`;\n      bulletedListItems = [];\n    }\n    if (numberedListItems.length > 0) {\n      newRichText += `<ol>${numberedListItems.join('')}</ol>`;\n      numberedListItems = [];\n    }\n    newRichText += block.html;\n  }\n});\n\nif (bulletedListItems.length > 0) {\n  newRichText += `<ul>${bulletedListItems.join('')}</ul>`;\n}\nif (numberedListItems.length > 0) {\n  newRichText += `<ol>${numberedListItems.join('')}</ol>`;\n}\n\nconst output = [{ newRichText }];\nreturn output;\n\n"
      },
      "id": "5816a123-54f7-4470-ad9c-cf8eb5fb52c0",
      "name": "Craft the rich text element1",
      "type": "n8n-nodes-base.code",
      "position": [
        3148.3572519550153,
        1756
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const blocks = $input.all().map(item => item.json);\nconst output = [];\n\nblocks.forEach(block => {\n  let html = '';\n  \n  switch (block.type) {\n    case 'heading_1':\n      html = block.heading_1.text.map(item => item.text.content).join(' ');\n      html = `<h1>${html}</h1>`;\n      break;\n    case 'heading_2':\n      html = block.heading_2.text.map(item => item.text.content).join(' ');\n      html = `<h2>${html}</h2>`;\n      break;\n    case 'heading_3':\n      html = block.heading_3.text.map(item => item.text.content).join(' ');\n      html = `<h3>${html}</h3>`;\n      break;\n    case 'paragraph':\n      html = `<p>${block.paragraph.text.map(item => {\n        let content = item.text.content.trim();\n        if (item.annotations.bold) content = `<b>${content}</b>`;\n        if (item.annotations.italic) content = `<i>${content}</i>`;\n        if (item.text.link) content = `<a href=\"${item.text.link.url}\">${content}</a>`;\n        return content;\n      }).join(' ') || '   '}</p>`; // the space inside the apostrophes is on purpose, otherwise Webflow will automatically delete the empty blocks\n      break;\n    case 'quote':\n      html = block.quote.text.map(item => item.text.content).join(' ');\n      html = `<blockquote>${html}</blockquote>`;\n      break;\n    case 'bulleted_list_item':\n      html = block.bulleted_list_item.text.map(item => item.text.content).join(' ');\n      html = `<li>${html}</li>`;\n      break;\n    case 'numbered_list_item':\n      html = block.numbered_list_item.text.map(item => item.text.content).join(' ');\n      html = `<li>${html}</li>`;\n      break;\n    case 'image':\n      const caption = block.image.caption.map(item => item.text.content).join(' ');\n      html = `<figure><img src=\"${block.image.file.url}\" alt=\"${caption}\" /><figcaption>${caption}</figcaption></figure>`;\n      break;\n    case 'code':\n      const codeContent = block.code.text.map(item => item.text.content).join('\\n')\n      html = `<pre><code>${codeContent}</code></pre>`\n      break\n    default:\n      html = block.content ? `<div>${block.content}</div>` : '';\n  }\n\n  if (html) {\n    output.push({\n      block_id: block.id,\n      type: block.type,\n      html\n    });\n  }\n});\n\nreturn output;\n"
      },
      "id": "5d0c76e8-8361-4570-bbd3-46c9d45ed8e4",
      "name": "Turn blocks into HTML1",
      "type": "n8n-nodes-base.code",
      "position": [
        2848.3572519550153,
        1760
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "resource": "block",
        "operation": "getAll",
        "blockId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $json.id }}"
        },
        "returnAll": true,
        "simplifyOutput": false
      },
      "id": "43b947b6-a8dd-4f73-991d-72431e8cc1cc",
      "name": "Get blocks1",
      "type": "n8n-nodes-base.notion",
      "position": [
        2568.3572519550153,
        1757
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "update",
        "siteId": "65a40576635069142ed11d7c",
        "collectionId": "65a40577635069142ed11dd8",
        "itemId": "={{ $json.webflow_item_id }}",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "_draft",
              "fieldValue": "true"
            },
            {
              "fieldId": "_archived",
              "fieldValue": "false"
            },
            {
              "fieldId": "name",
              "fieldValue": "={{ $json.name }}"
            },
            {
              "fieldId": "slug",
              "fieldValue": "={{ $json.property_slug }}"
            },
            {
              "fieldId": "blog-post-richt-text",
              "fieldValue": "={{ $json.newRichText }}"
            },
            {
              "fieldId": "blog-post-featured-image-photo",
              "fieldValue": "={{ $json.cover_url }}"
            },
            {
              "fieldId": "blog-post-thumbnail-image-photo",
              "fieldValue": "={{ $json.cover_url }}"
            }
          ]
        }
      },
      "id": "bf314784-6efd-47a4-8c32-d791d46e8af0",
      "name": "Update in \"Blog Posts\"",
      "type": "n8n-nodes-base.webflow",
      "maxTries": 3,
      "position": [
        4648.357251955015,
        1700
      ],
      "retryOnFail": true,
      "typeVersion": 1,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const compareResult = $json\nconst notionData = $('Final Notion post data').item.json\n\nconst output = {\n  ...notionData, // spread notion data\n  webflow_item_id: compareResult.different._id.inputB // add the webflow item id\n}\n\nreturn output"
      },
      "id": "576ce54d-f417-4683-89dc-f3e2c381b5e1",
      "name": "Add Webflow item id to Notion data",
      "type": "n8n-nodes-base.code",
      "position": [
        4388.357251955015,
        1680
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "87289a86-c97e-4b62-b8b2-d433eb21487c",
      "name": "Final Notion post data",
      "type": "n8n-nodes-base.merge",
      "position": [
        3368.3572519550153,
        1560
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "content": "### No wastes\nThese nodes extract the cover image url of the Notion page to make it easy for you to use it in the collection fields.",
        "height": 282.04364735085795,
        "width": 366.7438380520149
      },
      "id": "9fcb2e62-9b3a-4dfe-9215-ccab16b06584",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1842.3572519550153,
        1640
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "id": "c643fcbc-6f78-493b-9a02-8472af545e2c",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        508.3572519550153,
        1560
      ],
      "typeVersion": 1.2
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-08-12T12:39:06.587Z",
      "updatedAt": "2024-08-12T12:39:41.194Z",
      "id": "mbLRzOgSsfYouIvX",
      "name": "content production"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-08-12T12:39:34.000Z",
  "versionId": "06fbca5f-6765-4c94-949d-337066f24d93"
}