{
  "active": false,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "GET TimeEntries",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check if the TimeEntry exist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET TimeEntries": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Pass 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "lookup_toggl_project": {
      "main": [
        [
          {
            "node": "Lookup SM Project",
            "type": "main",
            "index": 0
          },
          {
            "node": "lookup_toggl_client",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates": {
      "main": [
        [
          {
            "node": "lookup_toggl_project",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lookup SM Project": {
      "main": [
        [
          {
            "node": "Pass 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pass  3": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "lookup SMCliient": {
      "main": [
        [
          {
            "node": "Pass  3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CreatetimeEntryinSM": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Message Formatting",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pass 1": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if the TimeEntry exist": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Remove Duplicates1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pass 2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "CreatetimeEntryinSM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates1": {
      "main": [
        [
          {
            "node": "lookup SMCliient",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Project": {
      "main": [
        [
          {
            "node": "Remove Duplicates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "lookup_toggl_client": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message Formatting": {
      "main": [
        [
          {
            "node": "Slack",
            "type": "main",
            "index": 0
          },
          {
            "node": "Mattermost",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Pass ",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Pass ": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          },
          {
            "node": "Find Project",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pass  ": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "lookup SMCliient1": {
      "main": [
        [
          {
            "node": "Pass  ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pass 3": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Lookup SM Project1": {
      "main": [
        [
          {
            "node": "Pass 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates2": {
      "main": [
        [
          {
            "node": "Lookup SM Project1",
            "type": "main",
            "index": 0
          },
          {
            "node": "lookup_toggl_client1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "lookup SMCliient1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "lookup_toggl_project1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "lookup_toggl_client1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "different": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          },
          {
            "node": "lookup_toggl_project1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "same": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "github_status": {
      "main": [
        [
          {
            "node": "same",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "github_status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OneAtATime": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          },
          {
            "node": "GitHub",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if the TimeEntry exist2": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "aggregate records to teams chats": {
      "main": [
        [
          {
            "node": "Mattermost1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Slack1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create timeEntry in SM": {
      "main": [
        [
          {
            "node": "aggregate records to teams chats",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Create timeEntry in SM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-07-24T15:59:29.024Z",
  "id": "kK4iRyooZuw4aiBT",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "WF001: Time entry is created in Toggl to SM v0.1",
  "nodes": [
    {
      "parameters": {},
      "id": "6ebc9bb2-c8cf-47d9-bb13-d76205034052",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        820,
        560
      ]
    },
    {
      "parameters": {
        "url": "https://api.track.toggl.com/api/v9/me/time_entries",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "options": {}
      },
      "id": "ed85094c-60bb-41b1-9c75-549f6ec937ab",
      "name": "GET TimeEntries",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1080,
        560
      ],
      "credentials": {
        "httpBasicAuth": {
          "id": "bVbx51fQToa3mOMj",
          "name": "Toggle credentials"
        }
      }
    },
    {
      "parameters": {
        "maxItems": 2
      },
      "id": "c7dfdebb-9e92-405a-bcd9-24f30c7fbc0a",
      "name": "Limit",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        1520,
        540
      ]
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C07BLFDL917",
          "mode": "list",
          "cachedResultName": "toggl-time-captured"
        },
        "text": "={{ $json[\"message\"] }}",
        "otherOptions": {}
      },
      "id": "363fa242-074d-4c44-808d-1ee4056ce5ad",
      "name": "Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.2,
      "position": [
        4720,
        420
      ],
      "credentials": {
        "slackOAuth2Api": {
          "id": "x77Xb6YhugsdNMWc",
          "name": "Slack account 2"
        }
      }
    },
    {
      "parameters": {
        "channelId": "jpqr5pw497dxf8kirt96t4ar5r",
        "message": "={{ $json[\"message\"] }}",
        "attachments": [
          {}
        ],
        "otherOptions": {
          "root_id": ""
        }
      },
      "id": "9f1fac66-3f94-4388-97e3-7436b528e056",
      "name": "Mattermost",
      "type": "n8n-nodes-base.mattermost",
      "typeVersion": 1,
      "position": [
        4720,
        620
      ],
      "credentials": {
        "mattermostApi": {
          "id": "VGOFEEFurY7VTUJP",
          "name": "Mattermost account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.smartsuite.com/api/v1/applications/668ecb995b7d04577b9a4190/records/list/",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "offet",
              "value": "0"
            },
            {
              "name": "limit",
              "value": "25"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Token 1a0df485ce520ec8d8e999727c53c09ef809b097"
            },
            {
              "name": "ACCOUNT-ID",
              "value": "swexdc6g"
            }
          ]
        },
        "options": {}
      },
      "id": "0ae41d55-845e-4a8f-8817-a53844787a65",
      "name": "Check if the TimeEntry exist",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1440,
        340
      ]
    },
    {
      "parameters": {
        "content": "## Reference Toggl",
        "height": 541.0123448220287,
        "width": 1468.4485804956025
      },
      "id": "a7bb7ad1-6bda-4d3f-8b59-018d7b92f9fd",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2380,
        320
      ]
    },
    {
      "parameters": {
        "content": "## SmartSuite",
        "height": 329.3037901061815,
        "width": 228.1849366795202
      },
      "id": "53c913c9-0173-4b55-b1f0-f5a955442617",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3940,
        440
      ]
    },
    {
      "parameters": {
        "content": "## Toggle Tiem Entries",
        "height": 263.20454016568175
      },
      "id": "9828c4f5-bda3-41aa-8daa-d23f212c373e",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1000,
        480
      ]
    },
    {
      "parameters": {
        "url": "=https://api.track.toggl.com/api/v9/workspaces/{{ $json.workspace_id }}/projects/{{ $json.project_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "authorization",
              "value": "Basic amFja29Ab2NvZGUzNjAuY29tOkFHWV9ucWcqenh2M2FteDNtd2U="
            }
          ]
        },
        "options": {}
      },
      "id": "98450567-4590-4750-91e3-fc1f4351b801",
      "name": "lookup_toggl_project",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2780,
        640
      ],
      "credentials": {
        "httpBasicAuth": {
          "id": "bVbx51fQToa3mOMj",
          "name": "Toggle credentials"
        }
      }
    },
    {
      "parameters": {},
      "id": "1133bd8f-601c-4e9a-8ef4-47990abc03e6",
      "name": "Remove Duplicates",
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 1.1,
      "position": [
        2580,
        640
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.smartsuite.com/api/v1/applications/65b0c1654050e485a501517d/records/list/",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "offet",
              "value": "0"
            },
            {
              "name": "limit",
              "value": "3"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Token 1a0df485ce520ec8d8e999727c53c09ef809b097"
            },
            {
              "name": "ACCOUNT-ID",
              "value": "swexdc6g"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"sort\": [\n    {\n      \"direction\": \"asc\",\n      \"field\": \"sf698fb364\"\n    }\n  ],\n  \"filter\": {\n    \"operator\": \"and\",\n    \"fields\": [\n      {\n       \"field\": \"sf698fb364\",\n       \"comparison\": \"is_equal_to\",\n       \"value\": \"{{ $json.id }}\"\n      }\n    ]\n  }\n}   ",
        "options": {}
      },
      "id": "903477dc-5d65-4253-ae94-eb7f4ea7c2e4",
      "name": "Lookup SM Project",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3020,
        640
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7bae4cdb-e441-48c8-8c0b-37d282e8bcaa",
              "name": "record_id",
              "value": "={{ $json.items[0].id }}",
              "type": "string"
            },
            {
              "id": "3ae977a8-3ab7-4570-8487-4e9a124c56fd",
              "name": "id",
              "value": "={{ $('lookup_toggl_project').item.json.id }}",
              "type": "number"
            },
            {
              "id": "416e681b-48b9-4704-9808-931bf9e9bc76",
              "name": "workspace_id",
              "value": "={{ $('lookup_toggl_project').item.json.workspace_id }}",
              "type": "number"
            },
            {
              "id": "56a887bf-c0be-4c2a-96ec-fc368836ba29",
              "name": "client_id",
              "value": "={{ $('lookup_toggl_project').item.json.client_id }}",
              "type": "number"
            },
            {
              "id": "e4a5d9e6-79b2-4425-9a0d-ee5c98320657",
              "name": "name",
              "value": "={{ $('lookup_toggl_project').item.json.name }}",
              "type": "string"
            },
            {
              "id": "2307815a-a79e-425f-a7e3-6c74d74ccea6",
              "name": "start_date",
              "value": "={{ $('lookup_toggl_project').item.json.start_date }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f926ab5b-b0fc-426d-bef5-c27c2af4e384",
      "name": "Pass 2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3240,
        640
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9031587b-91d4-4f68-a03b-f102a3d730d6",
              "name": "record_id",
              "value": "={{ $json.items[0].id }}",
              "type": "string"
            },
            {
              "id": "9ba084b6-2aa1-45e3-8ef3-db751dd9eb08",
              "name": "id",
              "value": "={{ $('Filter').item.json.id }}",
              "type": "number"
            },
            {
              "id": "ec7a38f9-7fa2-41bd-91b8-7d5d621f2769",
              "name": "wid",
              "value": "={{ $('Filter').item.json.wid }}",
              "type": "number"
            },
            {
              "id": "e6c4bf93-40fb-463b-90c5-bb3c0c901561",
              "name": "archived",
              "value": "={{ $('Filter').item.json.archived }}",
              "type": "boolean"
            },
            {
              "id": "cb0fdb03-4504-4c4f-8ed8-c07ec9893db2",
              "name": "name",
              "value": "={{ $('Filter').item.json.name }}",
              "type": "string"
            },
            {
              "id": "06881ab8-0210-452d-a273-ffa0db490338",
              "name": "at",
              "value": "={{ $('Filter').item.json.at }}",
              "type": "string"
            },
            {
              "id": "55f0bf3b-884a-4018-9f4c-e6ecb2267616",
              "name": "creator_id",
              "value": "={{ $('Filter').item.json.creator_id }}",
              "type": "number"
            },
            {
              "id": "0d0b9a1f-fda1-4a20-b8cc-e2847e2ac910",
              "name": "permissions",
              "value": "={{ $('Filter').item.json.permissions }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "31e10849-bee0-4c43-b0ca-978c283e7d53",
      "name": "Pass  3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3520,
        400
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.smartsuite.com/api/v1/applications/657c055059b633d6009e1e42/records/list/",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "offet",
              "value": "0"
            },
            {
              "name": "limit",
              "value": "3"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Token 1a0df485ce520ec8d8e999727c53c09ef809b097"
            },
            {
              "name": "ACCOUNT-ID",
              "value": "swexdc6g"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"sort\": [\n    {\n      \"direction\": \"asc\",\n      \"field\": \"s9c89ee2fe\"\n    }\n  ],\n  \"filter\": {\n    \"operator\": \"and\",\n    \"fields\": [\n      {\n       \"field\": \"s9c89ee2fe\",\n       \"comparison\": \"is_equal_to\",\n       \"value\": \"{{ $json.id }}\"\n      }\n    ]\n  }\n} ",
        "options": {}
      },
      "id": "e6e6ea50-45c1-4518-b493-41f8fb267625",
      "name": "lookup SMCliient",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3340,
        400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "d8ce5860-17d2-448b-a7dd-c1e76b7dd5bf",
              "leftValue": "={{ $json.stop }}",
              "rightValue": "",
              "operator": {
                "type": "dateTime",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f725e831-65ae-4a04-b626-374d60991217",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1280,
        560
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.smartsuite.com/api/v1/applications/668ecb995b7d04577b9a4190/records/",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Token 1a0df485ce520ec8d8e999727c53c09ef809b097"
            },
            {
              "name": "ACCOUNT-ID",
              "value": "swexdc6g"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"title\": \"{{ $json.start }} - {{ $json.description }}\",\n  \"description\": \"{{ $json.description }}\",\n  \"stoplight_status\": \"1\",\n  \"s88e7dacd4\": {\n    \"value\": \"in_progress\"\n  },\n  \"s7e18ac595\": \"{{ $json.billable }}\", \n  \"s388b58221\": \"{{ $json.client_name }}\",\n  \"sf78e2e067\": \"{{ $json.duration }}\",\n  \"sac94990b3\": \"{{ $json.time_entry_id }}\",\n  \"se64e66b7d\": \"{{ $json.pid }}\",\n  \"s104c552d1\": \"{{ $json.project_id }}\",\n  \"sf7335e6da\": \"{{ $json.proj_name }}\",\n  \"s462427aec\": \"{{ $json.workspace_id }}\",\n  \"sa60c2dda1\": \"{{ $json.start }}\",\n  \"sa7b8b841b\": \"{{ $json.stop }}\",\n  \"sa7a9c2140\": \"{{ $json.tags }}\",\n  \"se2afa90b2\": \"{{ $json.tag_ids }}\",\n  \"s8ce8d1b63\": \"{{ $json.duronly }}\",\n  \"s875daacbd\": \"{{ $json.at }}\",\n  \"s160017cbb\": \"{{ $json.server_deleted_at }}\",\n  \"s93e0bbcaa\": \"{{ $json.user_id }}\",\n  \"s5a8e4c60d\": \"{{ $json.uid }}\",\n  \"s4c2ea1202\": \"{{ $json.wid }}\",\n  \"s8e3e58cad\": \"{{ $json.client_id }}\",\n  \"sbca20347b\": \"{{ $json.proj_record_id }}\",\n  \"s4621e0408\": \"{{ $json.client_record_id }}\"\n}",
        "options": {}
      },
      "id": "ced9d65b-3f1c-40f6-bd89-e24ec69e4cfb",
      "name": "CreatetimeEntryinSM",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4000,
        520
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "title"
            },
            {
              "fieldToAggregate": "sf7335e6da"
            },
            {
              "fieldToAggregate": "status"
            },
            {
              "fieldToAggregate": "s2e7d2b64e"
            },
            {
              "fieldToAggregate": "se6d1375cc"
            },
            {
              "fieldToAggregate": "s6e80240de"
            },
            {
              "fieldToAggregate": "s388b58221"
            },
            {
              "fieldToAggregate": "description.data.content[0].content[0].text"
            }
          ]
        },
        "options": {}
      },
      "id": "723c32ad-141c-4782-ade5-b4b85e7f8717",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        4240,
        520
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "edac2a69-922b-4ae6-b446-77135538cd30",
              "name": "id",
              "value": "={{ $('Limit').item.json.id }}",
              "type": "string"
            },
            {
              "id": "6a4f893e-935d-40e1-9d47-42f447baf48f",
              "name": "workspace_id",
              "value": "={{ $('Limit').item.json.workspace_id }}",
              "type": "string"
            },
            {
              "id": "2434288c-8868-4d9c-974e-5a4d52264ffc",
              "name": "project_id",
              "value": "={{ $('Limit').item.json.project_id }}",
              "type": "string"
            },
            {
              "id": "b3321c6c-53b4-4cab-b7cd-ac8631e015b1",
              "name": "billable",
              "value": "={{ $json.billable }}",
              "type": "boolean"
            },
            {
              "id": "d9735093-d7e2-4f68-a91c-71e6b8eb502d",
              "name": "start",
              "value": "={{ $json.start }}",
              "type": "string"
            },
            {
              "id": "22cb8c7e-cf8c-4f47-a0a8-7a545b4d2eb8",
              "name": "stop",
              "value": "={{ $json.stop }}",
              "type": "string"
            },
            {
              "id": "6f7675da-ae62-46ea-bd96-03ebc3e4c1c2",
              "name": "duration",
              "value": "={{ $json.duration }}",
              "type": "number"
            },
            {
              "id": "fae21602-5447-4d3c-aec7-30d0279c5f8a",
              "name": "duration",
              "value": "={{ $json.duration }}",
              "type": "number"
            },
            {
              "id": "06fbe186-6946-4005-8b83-e6f250972aa4",
              "name": "description",
              "value": "={{ $json.description }}",
              "type": "string"
            },
            {
              "id": "d56eea09-b6eb-4d31-93d7-61aef5e017b9",
              "name": "tags",
              "value": "={{ $json.tags }}",
              "type": "array"
            },
            {
              "id": "d92ac077-7fae-409b-8ab3-74448c420a5e",
              "name": "tag_ids",
              "value": "={{ $json.tag_ids }}",
              "type": "array"
            },
            {
              "id": "0c178e35-c7c7-45e2-844d-f933f2d88a43",
              "name": "duronly",
              "value": "={{ $json.duronly }}",
              "type": "boolean"
            },
            {
              "id": "5064f29c-a084-4f86-9161-ef846ab352eb",
              "name": "at",
              "value": "={{ $json.at }}",
              "type": "string"
            },
            {
              "id": "c477e6cd-f2d7-4be1-a916-cbe6664fdb95",
              "name": "server_deleted_at",
              "value": "={{ $json.server_deleted_at }}",
              "type": "string"
            },
            {
              "id": "22140dac-6e84-4075-b049-430506352e6e",
              "name": "user_id",
              "value": "={{ $json.user_id }}",
              "type": "number"
            },
            {
              "id": "ac6cee6f-5f0b-4e18-b06f-0045f27d5127",
              "name": "uid",
              "value": "={{ $json.uid }}",
              "type": "number"
            },
            {
              "id": "1ccc3d98-f005-458a-8a81-b329760126ce",
              "name": "wid",
              "value": "={{ $json.wid }}",
              "type": "number"
            },
            {
              "id": "d76eb227-9508-43ea-9443-97f4d8e5ec9d",
              "name": "pid",
              "value": "={{ $json.pid }}",
              "type": "number"
            },
            {
              "id": "d7e495dd-1775-4e45-9c5e-0a746ec1a4b9",
              "name": "permissions",
              "value": "={{ $json.permissions }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d99a0d34-49b0-49a6-8958-87d246070cf8",
      "name": "Pass 1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1720,
        540
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "08ff3ca5-b4b3-485d-a7f0-995210d56231",
              "leftValue": "={{ $json.id }}",
              "rightValue": "={{ $('lookup_toggl_project').item.json.client_id }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "eaa3fa1c-e01b-4ddd-9a6e-cded97727d26",
      "name": "Filter",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [
        2960,
        400
      ]
    },
    {
      "parameters": {
        "mode": "combineBySql",
        "numberInputs": 3,
        "query": "WITH \n  client_ref AS \n  (\n  SELECT * FROM input1\n  ),\n  project as \n  (\n  select * from input3\n  ),\n  time_entry  AS\n  (\n  select\n    client_ref.id AS client_id, \n    client_ref.name AS client_name,\n    client_ref.record_id AS client_record_id,\n    project.record_id AS proj_record_id,\n    project.id AS project_id, \n    project.name AS proj_name,\n    input2.id AS time_entry_id,\n    input2.*\n  from input2\n    INNER JOIN project ON project.id = input2.project_id\n    LEFT JOIN client_ref ON client_ref.id = project.client_id\n  )\nselect * from time_entry;"
      },
      "id": "19c2032c-f2a1-4487-a654-60738e7d8fff",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        3720,
        520
      ]
    },
    {
      "parameters": {},
      "id": "2f465bef-3c7e-4916-b5db-e6da72338047",
      "name": "Remove Duplicates1",
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 1.1,
      "position": [
        3160,
        400
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f7122793-20cb-4ed8-b704-40e43d29ed22",
              "name": "project_id",
              "value": "={{ $json.project_id }}",
              "type": "string"
            },
            {
              "id": "bfd09284-ccce-42cd-ac05-2a5ccf2c1d21",
              "name": "workspace_id",
              "value": "={{ $json.workspace_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "cf9014d2-2fe1-43a7-8272-c62b4974ba9e",
      "name": "Find Project",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2420,
        640
      ]
    },
    {
      "parameters": {
        "url": "=https://api.track.toggl.com/api/v9/workspaces/{{ $json.workspace_id }}/clients",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "authorization",
              "value": "Basic amFja29Ab2NvZGUzNjAuY29tOkFHWV9ucWcqenh2M2FteDNtd2U="
            }
          ]
        },
        "options": {}
      },
      "id": "0651593c-ebf4-4a2d-9e08-0ed34a8cdfa2",
      "name": "lookup_toggl_client",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2760,
        400
      ],
      "credentials": {
        "httpBasicAuth": {
          "id": "bVbx51fQToa3mOMj",
          "name": "Toggle credentials"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Assuming 'AggregatedData' is the name of the node with the aggregated data\nconst aggregatedData = $node[\"Aggregate\"].json;\n\n// Prepare the message\nlet message = 'Hi Team,\\n\\nNew time entries are ready for review. Here are the details:\\n\\n';\n\nconst dates = [...new Set(aggregatedData.s2e7d2b64e)];\n\ndates.forEach(date => {\n  message += `*Date:* ${date}\\n`;\n  message += `*Client:* ${aggregatedData.s388b58221[0]}\\n`;\n   message += '\\n\\n';\n  message += '```\\n';  // Start block quote for grey frame\n  message += 'Title                      | Status               | Worked Hours  | Description\\n';\n  message += '---------------------------|----------------------|---------------|----------------------------------------------\\n';\n  \n  aggregatedData.s2e7d2b64e.forEach((entryDate, index) => {\n    if (entryDate === date) {\n      const title = aggregatedData.title[index].padEnd(27, ' ');\n      const status = aggregatedData.status[index].value.padEnd(20, ' ');\n      const hours = aggregatedData.se6d1375cc[index].toString().padEnd(13, ' ');\n      const description = aggregatedData.text[index];\n      message += `${title}| ${status} | ${hours} | ${description}\\n`;\n    }\n  });\n  message += '```\\n\\n';  // End block quote for grey frame\n});\n\nmessage += '\\nPlease review these entries at your earliest convenience.\\nThank you!\\n';\n\nreturn [\n  {\n    json: {\n      message: message\n    }\n  }\n];\n"
      },
      "id": "8a8ad3d2-8b12-411f-a8cc-797cf6a61896",
      "name": "Message Formatting",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4460,
        520
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ad5e71ca-c0a4-4c68-b0d6-bb45705e5028",
              "leftValue": "={{ $json.id }}",
              "rightValue": "={{ $json.items[1].sac94990b3 }}",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "2c430a3c-2063-4fe5-9932-09d60f7ea718",
              "leftValue": "={{ $json.id }}",
              "rightValue": "={{ $json.items[1].sac94990b3 }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "e67fdba3-3cb5-4d09-a3c7-63032dbd1935",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1940,
        540
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6a4f893e-935d-40e1-9d47-42f447baf48f",
              "name": "workspace_id",
              "value": "={{ $json.workspace_id }}",
              "type": "string"
            },
            {
              "id": "2434288c-8868-4d9c-974e-5a4d52264ffc",
              "name": "project_id",
              "value": "={{ $json.project_id }}",
              "type": "string"
            },
            {
              "id": "b3321c6c-53b4-4cab-b7cd-ac8631e015b1",
              "name": "billable",
              "value": "={{ $json.billable }}",
              "type": "boolean"
            },
            {
              "id": "d9735093-d7e2-4f68-a91c-71e6b8eb502d",
              "name": "start",
              "value": "={{ $json.start }}",
              "type": "string"
            },
            {
              "id": "22cb8c7e-cf8c-4f47-a0a8-7a545b4d2eb8",
              "name": "stop",
              "value": "={{ $json.stop }}",
              "type": "string"
            },
            {
              "id": "6f7675da-ae62-46ea-bd96-03ebc3e4c1c2",
              "name": "duration",
              "value": "={{ $json.duration }}",
              "type": "number"
            },
            {
              "id": "fae21602-5447-4d3c-aec7-30d0279c5f8a",
              "name": "duration",
              "value": "={{ $json.duration }}",
              "type": "number"
            },
            {
              "id": "06fbe186-6946-4005-8b83-e6f250972aa4",
              "name": "description",
              "value": "={{ $json.description }}",
              "type": "string"
            },
            {
              "id": "d56eea09-b6eb-4d31-93d7-61aef5e017b9",
              "name": "tags",
              "value": "={{ $json.tags }}",
              "type": "array"
            },
            {
              "id": "d92ac077-7fae-409b-8ab3-74448c420a5e",
              "name": "tag_ids",
              "value": "={{ $json.tag_ids }}",
              "type": "array"
            },
            {
              "id": "0c178e35-c7c7-45e2-844d-f933f2d88a43",
              "name": "duronly",
              "value": "={{ $json.duronly }}",
              "type": "boolean"
            },
            {
              "id": "5064f29c-a084-4f86-9161-ef846ab352eb",
              "name": "at",
              "value": "={{ $json.at }}",
              "type": "string"
            },
            {
              "id": "c477e6cd-f2d7-4be1-a916-cbe6664fdb95",
              "name": "server_deleted_at",
              "value": "={{ $json.server_deleted_at }}",
              "type": "string"
            },
            {
              "id": "22140dac-6e84-4075-b049-430506352e6e",
              "name": "user_id",
              "value": "={{ $json.user_id }}",
              "type": "number"
            },
            {
              "id": "ac6cee6f-5f0b-4e18-b06f-0045f27d5127",
              "name": "uid",
              "value": "={{ $json.uid }}",
              "type": "number"
            },
            {
              "id": "1ccc3d98-f005-458a-8a81-b329760126ce",
              "name": "wid",
              "value": "={{ $json.wid }}",
              "type": "number"
            },
            {
              "id": "d76eb227-9508-43ea-9443-97f4d8e5ec9d",
              "name": "pid",
              "value": "={{ $json.pid }}",
              "type": "number"
            },
            {
              "id": "d7e495dd-1775-4e45-9c5e-0a746ec1a4b9",
              "name": "permissions",
              "value": "={{ $json.permissions }}",
              "type": "string"
            },
            {
              "id": "ed38db3f-ad8a-41fb-9b9d-61d921d56e2f",
              "name": "id",
              "value": "={{ $json.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d5f46ffd-e49c-47ae-b444-a0c2b44fdd1f",
      "name": "Pass ",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2200,
        520
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.smartsuite.com/api/v1/applications/668ecb995b7d04577b9a4190/records/list/",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "offet",
              "value": "0"
            },
            {
              "name": "limit",
              "value": "25"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Token 1a0df485ce520ec8d8e999727c53c09ef809b097"
            },
            {
              "name": "ACCOUNT-ID",
              "value": "swexdc6g"
            }
          ]
        },
        "options": {}
      },
      "id": "f7cdf518-f607-4344-8ef5-1aab59b2ffc7",
      "name": "Check if the TimeEntry exist2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2480,
        1440
      ]
    },
    {
      "parameters": {},
      "id": "42cdeb57-2b12-4c4a-a87d-4cef0f49506e",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4120,
        1000
      ]
    },
    {
      "parameters": {
        "mode": "combineBySql",
        "numberInputs": 3,
        "query": "with \n  client_ref as\n  (\n  select * from input1\n  )\n  SELECT \n      client_ref.id as client_id, \n      client_ref.name as client_name,\n      client_ref.wid as client_wid,\n      client_ref.archived as client_archived, \n      client_ref.at as client_created_at,\n      client_ref.creator_id as client_created_id,\n      client_ref.record_id as client_record_id,\n      a.id as time_entry_id,\n      a.*,\n      b.record_id as proj_record_id,\n      b.id as project_id, \n      b.name as project_name, \n      b.*\n  FROM input2 a, \n      input3 b\n         inner join client_ref on client_ref.id = b.client_id\nWHERE a.project_id = b.id"
      },
      "id": "9e5c75ad-70fb-425f-abb9-8906ccb9858e",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        5360,
        1400
      ]
    },
    {
      "parameters": {
        "content": "## Reference Toggl",
        "height": 541.0123448220287,
        "width": 1447.3936059714647
      },
      "id": "6ea7681d-1f55-4356-b355-c34a7eb60127",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4080,
        1200
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.smartsuite.com/api/v1/applications/657c055059b633d6009e1e42/records/list/",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "offet",
              "value": "0"
            },
            {
              "name": "limit",
              "value": "3"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Token 1a0df485ce520ec8d8e999727c53c09ef809b097"
            },
            {
              "name": "ACCOUNT-ID",
              "value": "swexdc6g"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"sort\": [\n    {\n      \"direction\": \"asc\",\n      \"field\": \"s9c89ee2fe\"\n    }\n  ],\n  \"filter\": {\n    \"operator\": \"and\",\n    \"fields\": [\n      {\n       \"field\": \"s9c89ee2fe\",\n       \"comparison\": \"is_equal_to\",\n       \"value\": \"{{ $json.id }}\"\n      }\n    ]\n  }\n} ",
        "options": {}
      },
      "id": "b561782e-0850-4351-a1b5-927180a6d676",
      "name": "lookup SMCliient1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4760,
        1260
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9031587b-91d4-4f68-a03b-f102a3d730d6",
              "name": "record_id",
              "value": "={{ $json.items[0].id }}",
              "type": "string"
            },
            {
              "id": "58c8010a-e889-4d7b-a3e8-fc2f07075f2c",
              "name": "id",
              "value": "={{ $('If3').item.json.id }}",
              "type": "number"
            },
            {
              "id": "0d28fa75-dc41-4923-8847-e18d489eac19",
              "name": "wid",
              "value": "={{ $('If3').item.json.wid }}",
              "type": "number"
            },
            {
              "id": "5b381b19-8891-46c4-a616-591f4626dc80",
              "name": "archived",
              "value": "={{ $('If3').item.json.archived }}",
              "type": "boolean"
            },
            {
              "id": "ce84e29f-987f-45aa-89b8-046c6f0d9db8",
              "name": "name",
              "value": "={{ $('If3').item.json.name }}",
              "type": "string"
            },
            {
              "id": "2b6fb491-a6f8-4dec-bfcf-10daa3563a1f",
              "name": "at",
              "value": "={{ $('If3').item.json.at }}",
              "type": "string"
            },
            {
              "id": "f99e8599-1708-4ec7-815b-0d7b8a8d0900",
              "name": "creator_id",
              "value": "={{ $('If3').item.json.creator_id }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "129f0969-25d0-4044-b12d-0e2cd10b3da5",
      "name": "Pass  ",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4980,
        1260
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7bae4cdb-e441-48c8-8c0b-37d282e8bcaa",
              "name": "record_id",
              "value": "={{ $json.items[0].id }}",
              "type": "string"
            },
            {
              "id": "3ae977a8-3ab7-4570-8487-4e9a124c56fd",
              "name": "id",
              "value": "={{ $('Remove Duplicates2').item.json.id }}",
              "type": "number"
            },
            {
              "id": "416e681b-48b9-4704-9808-931bf9e9bc76",
              "name": "workspace_id",
              "value": "={{ $('Remove Duplicates2').item.json.workspace_id }}",
              "type": "number"
            },
            {
              "id": "56a887bf-c0be-4c2a-96ec-fc368836ba29",
              "name": "client_id",
              "value": "={{ $('Remove Duplicates2').item.json.client_id }}",
              "type": "number"
            },
            {
              "id": "09edce2a-cbdf-4e5f-bb28-03b32fecfe83",
              "name": "name",
              "value": "={{ $('Remove Duplicates2').item.json.name }}",
              "type": "string"
            },
            {
              "id": "013f122d-4b0a-49e2-b519-aed7f4d32cd9",
              "name": "is_private",
              "value": "={{ $('Remove Duplicates2').item.json.is_private }}",
              "type": "boolean"
            },
            {
              "id": "2ebe596f-05ee-415e-ac3f-8acfd599fb3f",
              "name": "active",
              "value": "={{ $('Remove Duplicates2').item.json.active }}",
              "type": "boolean"
            },
            {
              "id": "e55add26-57a0-4a5e-9a46-8a43c677f979",
              "name": "at",
              "value": "={{ $('Remove Duplicates2').item.json.at }}",
              "type": "string"
            },
            {
              "id": "4ad848f8-c95f-4341-b61b-734a6fc2dbd8",
              "name": "server_deleted_at",
              "value": "={{ $('Remove Duplicates2').item.json.server_deleted_at }}",
              "type": "string"
            },
            {
              "id": "1960a8a7-c61a-40c1-88d8-77e286c631b2",
              "name": "actual_hours",
              "value": "={{ $('Remove Duplicates2').item.json.actual_hours }}",
              "type": "number"
            },
            {
              "id": "832a6a1f-2765-45ea-97e5-1e5a605591ce",
              "name": "actual_seconds",
              "value": "={{ $('Remove Duplicates2').item.json.actual_seconds }}",
              "type": "number"
            },
            {
              "id": "f51cb229-b0d8-4604-9cb7-ca4b2bde3e03",
              "name": "status",
              "value": "={{ $('Remove Duplicates2').item.json.status }}",
              "type": "string"
            },
            {
              "id": "69a33ab3-2374-4c89-8adb-4a0e5f1e599d",
              "name": "start_date",
              "value": "={{ $('Remove Duplicates2').item.json.start_date }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "55c9b28b-4911-4454-973b-f2ff2c786704",
      "name": "Pass 3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5140,
        1520
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.smartsuite.com/api/v1/applications/65b0c1654050e485a501517d/records/list/",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "offet",
              "value": "0"
            },
            {
              "name": "limit",
              "value": "3"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Token 1a0df485ce520ec8d8e999727c53c09ef809b097"
            },
            {
              "name": "ACCOUNT-ID",
              "value": "swexdc6g"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"sort\": [\n    {\n      \"direction\": \"asc\",\n      \"field\": \"sf698fb364\"\n    }\n  ],\n  \"filter\": {\n    \"operator\": \"and\",\n    \"fields\": [\n      {\n       \"field\": \"sf698fb364\",\n       \"comparison\": \"is_equal_to\",\n       \"value\": \"{{ $json.id }}\"\n      }\n    ]\n  }\n}   ",
        "options": {}
      },
      "id": "5637a53b-c009-4589-a911-2b7aed05583d",
      "name": "Lookup SM Project1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4920,
        1520
      ]
    },
    {
      "parameters": {},
      "id": "47737b6d-6016-47db-b4c8-565c3b2a6633",
      "name": "Remove Duplicates2",
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 1.1,
      "position": [
        4720,
        1520
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "72a690fe-5300-4a8a-81a5-ecad768785d5",
              "leftValue": "={{ $json.id }}",
              "rightValue": "={{ $('Remove Duplicates2').item.json.client_id }}",
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "85049985-6641-425d-a663-e1377f07a47b",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4500,
        1280
      ]
    },
    {
      "parameters": {
        "url": "=https://api.track.toggl.com/api/v9/workspaces/{{ $json.workspace_id }}/projects/{{ $json.project_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "authorization",
              "value": "Basic amFja29Ab2NvZGUzNjAuY29tOkFHWV9ucWcqenh2M2FteDNtd2U="
            }
          ]
        },
        "options": {}
      },
      "id": "ac6b5910-3ed5-42b4-be91-0b6fd44710ab",
      "name": "lookup_toggl_project1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4300,
        1520
      ],
      "credentials": {
        "httpBasicAuth": {
          "id": "bVbx51fQToa3mOMj",
          "name": "Toggle credentials"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.track.toggl.com/api/v9/workspaces/{{ $json.workspace_id }}/clients",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "authorization",
              "value": "Basic amFja29Ab2NvZGUzNjAuY29tOkFHWV9ucWcqenh2M2FteDNtd2U="
            }
          ]
        },
        "options": {}
      },
      "id": "c08fefb5-4c52-487f-9ce1-c192fbfc574b",
      "name": "lookup_toggl_client1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4300,
        1280
      ],
      "credentials": {
        "httpBasicAuth": {
          "id": "bVbx51fQToa3mOMj",
          "name": "Toggle credentials"
        }
      }
    },
    {
      "parameters": {
        "content": "## SmartSuite",
        "height": 329.3037901061815,
        "width": 278.75835396816683
      },
      "id": "88efabc8-08d8-4f0e-8421-05a5866371b9",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5560,
        1300
      ]
    },
    {
      "parameters": {
        "channelId": "jpqr5pw497dxf8kirt96t4ar5r",
        "attachments": [],
        "otherOptions": {}
      },
      "id": "ee4eaa1b-9884-42d4-9a26-95b22e243af1",
      "name": "Mattermost1",
      "type": "n8n-nodes-base.mattermost",
      "typeVersion": 1,
      "position": [
        6120,
        1520
      ],
      "credentials": {
        "mattermostApi": {
          "id": "VGOFEEFurY7VTUJP",
          "name": "Mattermost account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "otherOptions": {}
      },
      "id": "27216d71-0f18-4f39-95a8-c2389813e787",
      "name": "Slack1",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.2,
      "position": [
        6120,
        1300
      ],
      "disabled": true
    },
    {
      "parameters": {},
      "id": "5d23930b-3d21-4116-ae8e-f07aea2f2080",
      "name": "new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        3840,
        1620
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "a4a60bb1-9b0c-4737-891a-1872ffee7086",
      "name": "different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        3820,
        1400
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "0cc7bbf1-6937-422d-bb09-3127ed2d7211",
      "name": "same",
      "type": "n8n-nodes-base.noOp",
      "position": [
        3820,
        1220
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"github_status\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "0cf8130c-7d7a-4b2d-96d7-cd501615f0ca",
      "name": "github_status",
      "type": "n8n-nodes-base.switch",
      "position": [
        3580,
        1420
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// File Returned with Content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Get JSON Objects\n  var origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64'));\n  var n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON Objects\n  var orderedOriginal = {}\n  var orderedActual = {}\n  \n  Object.keys(origWorkflow).sort().forEach(function(key) {\n    orderedOriginal[key] = origWorkflow[key];\n  });\n  \n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n\n  // Determine Difference\n  if ( JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual) ) {\n    $input.all()[0].json.github_status = \"same\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n// No File Returned / New Workflow\n} else {\n  // Order JSON Object\n  var n8nWorkflow = ($input.all()[1].json);\n  var orderedActual = {}\n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n  \n  // Proper Formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return Items\nreturn $input.all();"
      },
      "id": "f0307745-1c4d-4faf-b8d2-def0087e9a1f",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        3340,
        1420
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Single Item Loop\nWe process each workflow item one at a time, We first check Github to see if a file exists then we merge the Github Data and the API item so we can check if the values match in the function node `isDiffOrNew` we then set a status of `same`, `different` or `new`",
        "height": 424.04333333333386,
        "width": 629.230453137713
      },
      "id": "57c9f0c7-151f-4aa3-b96d-15fd4ed53478",
      "name": "Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2660,
        1160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "295de16c-b4ff-44bf-a417-c4e7298f1282",
      "name": "OneAtATime",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        2720,
        1440
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$json[\"name\"]}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "966f69d1-10de-4afa-8a09-d2ef485adade",
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "position": [
        2940,
        1280
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "githubApi": {
          "id": "7txefx36DPZl9bxI",
          "name": "GitHub account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "jsCode": "{\n  \"nodes\": [\n    {\n      \"parameters\": {\n        \"functionCode\": `\n        // Get the items from the previous node\n        const items = $items();\n        \n        // Initialize an array to hold the content\n        let aggregatedContent = \"\";\n        \n        // Loop through each item and concatenate the content\n        items.forEach(item => {\n          aggregatedContent += item.json.content + \"\\\\n\"; // Adjust 'content' to the actual field name\n        });\n        \n        // Return a single item with the aggregated content\n        return [{ json: { aggregatedContent: aggregatedContent } }];\n        `\n      },\n      \"name\": \"Aggregate Content\",\n      \"type\": \"n8n-nodes-base.function\",\n      \"typeVersion\": 1,\n      \"position\": [\n        450,\n        300\n      ]\n    }\n  ]\n}"
      },
      "id": "c7095f89-574d-498d-b07e-20e8e8a78775",
      "name": "aggregate records to teams chats",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5900,
        1400
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.smartsuite.com/api/v1/applications/668ecb995b7d04577b9a4190/records/",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Token 1a0df485ce520ec8d8e999727c53c09ef809b097"
            },
            {
              "name": "ACCOUNT-ID",
              "value": "swexdc6g"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"title\": \"{{ $json.start }} - {{ $json.description }}\",\n  \"description\": \"{{ $json.name }} - {{ $json.description }}\",\n  \"stoplight_status\": \"1\",\n  \"s88e7dacd4\": {\n    \"value\": \"ready_for_review\"\n  },\n  \"s7e18ac595\": \"{{ $json.billable }}\", \n  \"s388b58221\": \"{{ $json.client_name }}\",\n  \"sf78e2e067\": \"{{ $json.duration }}\",\n  \"sac94990b3\": \"{{ $json.time_entry_id }}\",\n  \"se64e66b7d\": \"{{ $json.pid }}\",\n  \"s104c552d1\": \"{{ $json.project_id }}\",\n  \"sf7335e6da\": \"{{ $json.project_name }}\",\n  \"s462427aec\": \"{{ $json.workspace_id }}\",\n  \"saf4ce5701\": \"{{ $json.task_id }}\",\n  \"sa60c2dda1\": \"{{ $json.start }}\",\n  \"sa7b8b841b\": \"{{ $json.stop }}\",\n  \"sa7a9c2140\": \"{{ $json.tags }}\",\n  \"se2afa90b2\": \"{{ $json.tag_ids }}\",\n  \"s8ce8d1b63\": \"{{ $json.duronly }}\",\n  \"s875daacbd\": \"{{ $json.at }}\",\n  \"s160017cbb\": \"{{ $json.server_deleted_at }}\",\n  \"s93e0bbcaa\": \"{{ $json.user_id }}\",\n  \"s5a8e4c60d\": \"{{ $json.uid }}\",\n  \"s4c2ea1202\": \"{{ $json.wid }}\",\n  \"s8e3e58cad\": \"{{ $json.client_id }}\",\n  \"sbca20347b\": \"{{ $json.proj_record_id }}\",\n  \"s4621e0408\": \"{{ $json.client_record_id }}\"\n}\n ",
        "options": {}
      },
      "id": "eb955199-4cad-48d3-a7ef-d3550b4c31b6",
      "name": "Create timeEntry in SM",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5640,
        1400
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "timezone": "Africa/Johannesburg",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-08-01T21:27:05.000Z",
  "versionId": "88fafa4b-b8a1-44ab-a3f8-703a772ea27e"
}