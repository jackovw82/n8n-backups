{
  "active": false,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "GET TimeEntries - Current",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Pass 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pass 1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "GET TimeEntries - Current",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SMTimeEntry": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET TimeEntries - Current": {
      "main": [
        [
          {
            "node": "OneAtATime1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OneAtATime1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          },
          {
            "node": "SMTimeEntry",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new": {
      "main": [
        [
          {
            "node": "Execute Workflow2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow2": {
      "main": [
        [
          {
            "node": "CreatetimeEntryinSM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "CreatetimeEntryinSM1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "same": {
      "main": [
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "status": {
      "main": [
        [
          {
            "node": "same",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-09-01T18:32:29.923Z",
  "id": "2PaB6cw7SpIx2CPM",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "WF001__Time_entry_is_created_in_Toggl_to_SM_v3_Current_Entries",
  "nodes": [
    {
      "parameters": {},
      "id": "db515401-4964-46de-879f-068a44591e6d",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1654,
        540
      ]
    },
    {
      "parameters": {
        "content": "## Toggle Time Entries",
        "height": 295.13937069118873
      },
      "id": "865fab2d-7399-45fe-9ba7-538d47384883",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1420,
        540
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "d8ce5860-17d2-448b-a7dd-c1e76b7dd5bf",
              "leftValue": "={{ $json.stop }}",
              "rightValue": "",
              "operator": {
                "type": "dateTime",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "dc0bef93-adf6-437f-915d-b256f2057f4f",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -840,
        760
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.smartsuite.com/api/v1/applications/668ecb995b7d04577b9a4190/records/",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Token 1a0df485ce520ec8d8e999727c53c09ef809b097"
            },
            {
              "name": "ACCOUNT-ID",
              "value": "swexdc6g"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"title\": \"{{ $json.start }} - {{ $json.description }}\",\n  \"description\": \"{{ $json.description }}\",\n  \"stoplight_status\": \"1\",\n  \"s88e7dacd4\": {\n    \"value\": \"in_progress\"\n  },\n  \"s7e18ac595\": \"{{ $json.billable }}\", \n  \"s388b58221\": \"{{ $json.client_name }}\",\n  \"sf78e2e067\": \"{{ $json.duration }}\",\n  \"sac94990b3\": \"{{ $json.time_entry_id }}\",\n  \"se64e66b7d\": \"{{ $json.pid }}\",\n  \"s104c552d1\": \"{{ $json.project_id }}\",\n  \"sf7335e6da\": \"{{ $json.proj_name }}\",\n  \"s462427aec\": \"{{ $json.workspace_id }}\",\n  \"sa60c2dda1\": \"{{ $json.start }}\",\n  \"sa7b8b841b\": \"{{ $json.stop }}\",\n  \"sa7a9c2140\": \"{{ $json.tags }}\",\n  \"se2afa90b2\": \"{{ $json.tag_ids }}\",\n  \"s8ce8d1b63\": \"{{ $json.duronly }}\",\n  \"s875daacbd\": \"{{ $json.at }}\",\n  \"s160017cbb\": \"{{ $json.server_deleted_at }}\",\n  \"s93e0bbcaa\": \"{{ $json.user_id }}\",\n  \"s5a8e4c60d\": \"{{ $json.uid }}\",\n  \"s4c2ea1202\": \"{{ $json.wid }}\",\n  \"s8e3e58cad\": \"{{ $json.client_id }}\",\n  \"sbca20347b\": \"{{ $json.project_sm_rec_id }}\",\n  \"s4621e0408\": \"{{ $json.client_sm_rec_id }}\"\n}\n",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 60000
            }
          }
        }
      },
      "id": "a75243d0-0729-4923-86b3-b99080882e06",
      "name": "CreatetimeEntryinSM",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        840,
        660
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "edac2a69-922b-4ae6-b446-77135538cd30",
              "name": "id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "6a4f893e-935d-40e1-9d47-42f447baf48f",
              "name": "workspace_id",
              "value": "={{ $json.workspace_id }}",
              "type": "string"
            },
            {
              "id": "2434288c-8868-4d9c-974e-5a4d52264ffc",
              "name": "project_id",
              "value": "={{ $json.project_id }}",
              "type": "string"
            },
            {
              "id": "b3321c6c-53b4-4cab-b7cd-ac8631e015b1",
              "name": "billable",
              "value": "={{ $json.billable }}",
              "type": "boolean"
            },
            {
              "id": "d9735093-d7e2-4f68-a91c-71e6b8eb502d",
              "name": "start",
              "value": "={{ $json.start }}",
              "type": "string"
            },
            {
              "id": "22cb8c7e-cf8c-4f47-a0a8-7a545b4d2eb8",
              "name": "stop",
              "value": "={{ $json.stop }}",
              "type": "string"
            },
            {
              "id": "6f7675da-ae62-46ea-bd96-03ebc3e4c1c2",
              "name": "duration",
              "value": "={{ $json.duration }}",
              "type": "number"
            },
            {
              "id": "fae21602-5447-4d3c-aec7-30d0279c5f8a",
              "name": "duration",
              "value": "={{ $json.duration }}",
              "type": "number"
            },
            {
              "id": "06fbe186-6946-4005-8b83-e6f250972aa4",
              "name": "description",
              "value": "={{ $json.description }}",
              "type": "string"
            },
            {
              "id": "d56eea09-b6eb-4d31-93d7-61aef5e017b9",
              "name": "tags",
              "value": "={{ $json.tags }}",
              "type": "array"
            },
            {
              "id": "d92ac077-7fae-409b-8ab3-74448c420a5e",
              "name": "tag_ids",
              "value": "={{ $json.tag_ids }}",
              "type": "array"
            },
            {
              "id": "0c178e35-c7c7-45e2-844d-f933f2d88a43",
              "name": "duronly",
              "value": "={{ $json.duronly }}",
              "type": "boolean"
            },
            {
              "id": "5064f29c-a084-4f86-9161-ef846ab352eb",
              "name": "at",
              "value": "={{ $json.at }}",
              "type": "string"
            },
            {
              "id": "c477e6cd-f2d7-4be1-a916-cbe6664fdb95",
              "name": "server_deleted_at",
              "value": "={{ $json.server_deleted_at }}",
              "type": "string"
            },
            {
              "id": "22140dac-6e84-4075-b049-430506352e6e",
              "name": "user_id",
              "value": "={{ $json.user_id }}",
              "type": "number"
            },
            {
              "id": "ac6cee6f-5f0b-4e18-b06f-0045f27d5127",
              "name": "uid",
              "value": "={{ $json.uid }}",
              "type": "number"
            },
            {
              "id": "1ccc3d98-f005-458a-8a81-b329760126ce",
              "name": "wid",
              "value": "={{ $json.wid }}",
              "type": "number"
            },
            {
              "id": "d76eb227-9508-43ea-9443-97f4d8e5ec9d",
              "name": "pid",
              "value": "={{ $json.pid }}",
              "type": "number"
            },
            {
              "id": "d7e495dd-1775-4e45-9c5e-0a746ec1a4b9",
              "name": "permissions",
              "value": "={{ $json.permissions }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e0d2e873-24ea-442f-b961-ecde9fe92fa2",
      "name": "Pass 1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -620,
        740
      ]
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  item.json.id = item.json.id.trim();\n  return item;\n});"
      },
      "id": "6c964cf3-ff19-427b-b8dc-3b9a72ff53ab",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -400,
        740
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 2
            }
          ]
        }
      },
      "id": "b37d759a-7641-4aec-8aaa-ce736daf401b",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1640,
        740
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.smartsuite.com/api/v1/applications/668ecb995b7d04577b9a4190/records/list/",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "offet",
              "value": "0"
            },
            {
              "name": "limit",
              "value": "25"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Token 1a0df485ce520ec8d8e999727c53c09ef809b097"
            },
            {
              "name": "ACCOUNT-ID",
              "value": "swexdc6g"
            }
          ]
        },
        "options": {}
      },
      "id": "c9547162-5eb9-4396-b9e5-543987a3416e",
      "name": "SMTimeEntry",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -760,
        560
      ]
    },
    {
      "parameters": {
        "url": "https://api.track.toggl.com/api/v9/me/time_entries",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "authorization",
              "value": "Basic fad219efdf49dddd14880e6923f32cad"
            }
          ]
        },
        "options": {}
      },
      "id": "24807945-c63a-4505-93b9-e032b77a66e9",
      "name": "GET TimeEntries - Current",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1340,
        640
      ],
      "credentials": {
        "httpBasicAuth": {
          "id": "6WJNY0bjxn7UPeUf",
          "name": "Toggl"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "items",
        "include": "selectedOtherFields",
        "fieldsToInclude": "items",
        "options": {}
      },
      "id": "946b2063-3fb1-43e2-81cc-1b84b11848b0",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -560,
        560
      ]
    },
    {
      "parameters": {
        "content": "## New Time Entry\n**Double click** to edit me. [Guide](https://docs.n8n.io/workflows/sticky-notes/)",
        "height": 108.79114802564072,
        "width": 256.8638769794504
      },
      "id": "78671800-54bd-4041-879d-c2c271afab4f",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1720,
        380
      ]
    },
    {
      "parameters": {},
      "id": "b75222aa-a24c-4d0b-bb4c-2d9e8eba2dec",
      "name": "same",
      "type": "n8n-nodes-base.noOp",
      "position": [
        460,
        480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "3b7e1889-5b3e-4fe2-a7a0-34de570f5498",
      "name": "new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        460,
        660
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Save the data\nUsing the switch node we work out what to do based on the previous status,  If it is the same we do nothing, If it is different we update the file in Github and if it is new we create a new file. After this is done we loop back to the Split in Batches node (OneAtAtTime) to start the process again.",
        "height": 343.48959208359065,
        "width": 480.6862011745137
      },
      "id": "e1bb71ec-042a-403d-96ff-a1481870e5ee",
      "name": "Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -60,
        400
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "batchSize": 2,
        "options": {}
      },
      "id": "fc15ee1f-1be1-4b9d-8a49-f296cef79848",
      "name": "OneAtATime1",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        -1120,
        640
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// Assuming there are two JSON inputs from different sources\nconst inputJSON1 = $input.all()[0].json;\nconst inputJSON2 = $input.all()[1].json;\n\n// Function to decode base64 and parse JSON, if applicable\nfunction decodeAndParse(base64Str) {\n  try {\n    const jsonStr = Buffer.from(base64Str, 'base64').toString();\n    return JSON.parse(jsonStr);\n  } catch (error) {\n    console.error(\"Failed to decode and parse:\", error);\n    return null;\n  }\n}\n\n// Decode and parse the original workflow if it has content, otherwise return the raw JSON\nconst parsedData1 = inputJSON1.content ? decodeAndParse(inputJSON1.content) : inputJSON1;\nconst parsedData2 = inputJSON2.content ? decodeAndParse(inputJSON2.content) : inputJSON2;\n\n// Ensure both data sources are arrays; adjust according to the actual data structure\nconst referenceData = Array.isArray(parsedData1) ? parsedData1 : [parsedData1];\nconst currentData = Array.isArray(parsedData2) ? parsedData2 : [parsedData2];\n\n// Helper function to find if an ID from input2 exists in the reference data from input1\nfunction findMatch(reference, current) {\n  const referenceIds = new Set(reference.map(item => item.sac94990b3)); // Assumes each item has 'sac94990b3'\n  return current.filter(item => referenceIds.has(item.id)); // Assumes each item has 'id'\n}\n\n// Find matching and non-matching records from currentData based on referenceData\nconst matchedRecords = findMatch(referenceData, currentData);\nconst unmatchedRecords = currentData.filter(item => !matchedRecords.includes(item));\n\n// Prepare the results\nconst results = {\n  matches: matchedRecords.map(item => ({ id: item.id, status: \"exist\" })),\n  non_matches: unmatchedRecords.map(item => ({ id: item.id, status: \"new\" }))\n};\n\n// Return the results\nreturn results;\n"
      },
      "id": "9d38e6b1-1793-48ec-b6f5-d7caed9d2a43",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        20,
        580
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Lookup SmartSuite Time Entry Records",
        "height": 227.36392902115014,
        "width": 381.8019106737111
      },
      "id": "42f5aaff-dd04-420c-916a-1e232a9b396c",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -800,
        480
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "caa69b47-b40c-4ab6-85da-5e0c454941a7",
      "name": "Execute Workflow2",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        640,
        660
      ]
    },
    {
      "parameters": {
        "content": "## Create New Entry in SmartSuite",
        "height": 482.44590191871686,
        "width": 221.25517819492052
      },
      "id": "b59ae320-09ef-4969-b1e2-fc3fea54c204",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        580,
        340
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.smartsuite.com/api/v1/applications/668ecb995b7d04577b9a4190/records/",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Token 1a0df485ce520ec8d8e999727c53c09ef809b097"
            },
            {
              "name": "ACCOUNT-ID",
              "value": "swexdc6g"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"title\": \"{{ $json.start }} - {{ $json.description }}\",\n  \"description\": \"{{ $json.description }}\",\n  \"stoplight_status\": \"1\",\n  \"s88e7dacd4\": {\n    \"value\": \"in_progress\"\n  },\n  \"s7e18ac595\": \"{{ $json.billable }}\", \n  \"s388b58221\": \"{{ $json.client_name }}\",\n  \"sf78e2e067\": \"{{ $json.duration }}\",\n  \"sac94990b3\": \"{{ $json.time_entry_id }}\",\n  \"se64e66b7d\": \"{{ $json.pid }}\",\n  \"s104c552d1\": \"{{ $json.project_id }}\",\n  \"sf7335e6da\": \"{{ $json.proj_name }}\",\n  \"s462427aec\": \"{{ $json.workspace_id }}\",\n  \"sa60c2dda1\": \"{{ $json.start }}\",\n  \"sa7b8b841b\": \"{{ $json.stop }}\",\n  \"sa7a9c2140\": \"{{ $json.tags }}\",\n  \"se2afa90b2\": \"{{ $json.tag_ids }}\",\n  \"s8ce8d1b63\": \"{{ $json.duronly }}\",\n  \"s875daacbd\": \"{{ $json.at }}\",\n  \"s160017cbb\": \"{{ $json.server_deleted_at }}\",\n  \"s93e0bbcaa\": \"{{ $json.user_id }}\",\n  \"s5a8e4c60d\": \"{{ $json.uid }}\",\n  \"s4c2ea1202\": \"{{ $json.wid }}\",\n  \"s8e3e58cad\": \"{{ $json.client_id }}\",\n  \"sbca20347b\": \"{{ $json.project_sm_rec_id }}\",\n  \"s4621e0408\": \"{{ $json.client_sm_rec_id }}\"\n}\n",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 1,
              "batchInterval": 60000
            }
          }
        }
      },
      "id": "7855514f-cd95-44db-a5d0-196b31e70455",
      "name": "CreatetimeEntryinSM1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        840,
        480
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "3181f5c6-0b80-478d-90ba-375b64b48e96",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        640,
        480
      ]
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"status\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "exist"
            },
            {
              "value2": "new",
              "output": 1
            }
          ]
        }
      },
      "id": "640e4df9-5a9d-41e7-b923-1d413e6bb259",
      "name": "status",
      "type": "n8n-nodes-base.switch",
      "position": [
        260,
        580
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "b4a95097-e39b-4018-8cfa-a5a13e793fb2",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -200,
        580
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "timezone": "Africa/Johannesburg",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": true,
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-09-18T21:42:13.000Z",
  "versionId": "f4e888ff-859e-49d0-8e63-00b1fe4dfe32"
}